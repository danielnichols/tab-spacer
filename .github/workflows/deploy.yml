name: Deployment

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v3

      # Install Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install Yarn
      - name: Install Yarn
        run: |
          npm i -g yarn
          yarn --version
      # Restore Yarn cache
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache Dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ secrets.CACHE_VERSION }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ secrets.CACHE_VERSION }}-${{ runner.os }}-yarn-
      # Install Dependencies
      - name: Install Dependencies
        run: |
          yarn install
          yarn --version
      # Build the site
      - name: Build page
        run: yarn build

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          # deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY_SSH_PRIVATE }}
          deploy_key: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages
          exclude_assets: "{./!(analysis)/**,./!(asset-manifest.json)}"